###############################################################################
# üõ†Ô∏è CONFIGURACI√ìN DEL SERVIDOR BACKEND (Node.js + Express)
# -----------------------------------------------------------------------------
# Puerto en el que se ejecuta el backend. Usado internamente en el contenedor
# y externamente mediante Docker Compose (ej. http://localhost:3000).
###############################################################################
PORT=3000

###############################################################################
# üíæ CONEXI√ìN A BASE DE DATOS RELACIONAL (MySQL / MariaDB)
# -----------------------------------------------------------------------------
# Credenciales y par√°metros de conexi√≥n. Si usas Docker Compose,
# DB_HOST debe ser 'mysql' (el nombre del servicio definido en docker-compose.yml).
###############################################################################
DB_HOST=mysql
DB_PORT=3306
DB_USER=admin_tianguistore
DB_PASSWORD=tianguistore1234
DB_NAME=tienda_db

###############################################################################
# üõ°Ô∏è JWT - ACCESS TOKENS (AUTENTICACI√ìN)
# -----------------------------------------------------------------------------
# Clave secreta para firmar Access Tokens (v√°lidos por sesiones cortas).
# JWT_EXPIRES_IN puede expresarse en 's', 'm', 'h', 'd' (segundos, minutos, etc).
###############################################################################
JWT_SECRET=clave_super_segura_para_tianguistore
JWT_EXPIRES_IN=1d

###############################################################################
# üîÑ JWT - REFRESH TOKENS (MANTENER SESI√ìN)
# -----------------------------------------------------------------------------
# Clave separada para firmar Refresh Tokens (permiten renovar sesi√≥n).
###############################################################################
JWT_REFRESH_SECRET=clave_aun_mas_segura_para_refresh_tianguistore
JWT_REFRESH_EXPIRES_IN=7d

###############################################################################
# üåê URL DEL FRONTEND (Materialize + JS puro + Nginx)
# -----------------------------------------------------------------------------
# Direcci√≥n desde la que se sirve el frontend. En desarrollo puede ser Live Server,
# en producci√≥n puede ser el contenedor Nginx (por ejemplo http://localhost:8080).
###############################################################################
FRONTEND_URL=http://localhost:8080

###############################################################################
# üìß SMTP - ENV√çO DE CORREOS (OPCIONAL)
# -----------------------------------------------------------------------------
# Requerido si implementas funciones de recuperaci√≥n de contrase√±a, contacto, etc.
# Se recomienda usar contrase√±as de aplicaci√≥n si usas Gmail u Outlook.
###############################################################################
EMAIL_USER=your-email@example.com
EMAIL_PASS=your-email-password

###############################################################################
# üìä INFLUXDB ‚Äì MONITOREO Y REGISTRO DE EVENTOS
# -----------------------------------------------------------------------------
# Conexi√≥n al contenedor de InfluxDB v2.7+. Aseg√∫rate de que el token tenga
# permisos de escritura en el bucket indicado dentro de la organizaci√≥n.
# Estas variables deben coincidir con las del servicio `influxdb` en Docker Compose.
###############################################################################
INFLUX_URL=http://influxdb:8086
INFLUX_TOKEN=SIfM25CKG6sRcxbAtBlmIh722zboOEO1e2fAtd78gN3QwHKKctmypUMbiud8B5Ftv1ghTZ-RtiMNgVMi4t30kA==
INFLUX_ORG=tianguistore_org
INFLUX_BUCKET=metrics

###############################################################################
# ‚ö†Ô∏è SEGURIDAD ‚Äì NUNCA SUBAS ESTE ARCHIVO A UN REPOSITORIO P√öBLICO
# -----------------------------------------------------------------------------
# Este archivo contiene claves sensibles. Agrega '.env' a tu .gitignore.
# Usa `.env.example` como plantilla segura para compartir configuraci√≥n p√∫blica.
###############################################################################
